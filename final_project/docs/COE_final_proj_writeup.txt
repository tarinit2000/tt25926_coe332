Final Project 

Project Purpose 
For this project, I built a REST API frontend to a glioblastoma tumor information database that allows for basic CRUD (Create, Read, Update, Delete) operations and also allows users to submit analysis jobs. 

What is Glioblastoma?
Glioblastoma is the most invasive and common form of brain tumor in adults globally, and current treatments are ineffective in targeting all cancerous cells. 
To understand the nature of this disease, glioblastoma progresses when brain cells called astrocytes mutate and spread uncontrollably throughout the entire brain. 
These cancer cells damage healthy brain tissue and increase pressure on surrounding tissue and the skull. 
Glioblastoma symptoms include a significant deterioration in natural cognitive functions, severe headaches, and frequent seizures. 
Unfortunately, this invasive disease has no known cure and has extremely low prognosis (median survival timeline of fifteen to eighteen months and a 10% five-year survival rate).

Project Data
The data set for this project was derived from: https://wiki.cancerimagingarchive.net/pages/viewpage.action?pageId=50135264#501352644613f7d5a2514c2195445afde60ce068
In the research study linked above, 123 glioblastoma patients had MRI scans done every 8 weeks for 72 weeks (10 total scans). 
For the purposes of this project, the data dictionary stores the cross-sectional tumor diameters, a common means for characterizing tumors in the clinic, for all patients. 
Patients without data for certain scans were given a value of "null", and each patient was assigned a uuid for identification purposes. 

Data Cleaning
The data was cleaned using a MATLAB script. Patients with zero baseline diameters and no scans after baseline were removed from the set since they did not have enough insightful data.
62 patients remained after data cleaning procedures were implemented.  

Code Organization
- tarinit-fproj-flask-deployment.yml
- tarinit-fproj-flask-service.yml
- tarinit-fproj-redis-deployment.yml
- tarinit-fproj-redis-pvc.yml
- tarinit-fproj-redis-service.yml		
- tarinit-fproj-worker-deployment.yml
- requirements.txt
- README.md
- Dockerfile
- source
	- worker.py
	- api.py
	- jobs.py
	- data.json
	- data.csv

Deploying and Running the Project
Build a docker image using a format similar to this:
docker build -t tarinit2000/tarinit-finalproj-app-flask:1.0 .
docker push tarinit2000/tarinit-finalproj-app-flask:1.0 

Deploy kubernetes pods using the following code:
$ kubectl apply -f tarinit-finalproj-flask-deployment.yml
deployment.apps/tarinit-test-flask-deployment-finalproj created

$ kubectl apply -f tarinit-finalproj-flask-service.yml
service/tarinit-test-flask-service-finalproj created

$ kubectl apply -f tarinit-finalproj-redis-deployment.yml
deployment.apps/tarinit-test-redis-deployment-finalproj created

$ kubectl apply -f tarinit-finalproj-redis-service.yml
service/tarinit-test-redis-service-finalproj created

$ kubectl apply -f tarinit-finalproj-redis-pvc.yml
persistentvolumeclaim/tarinit-test-redis-pvc-finalproj created

$ kubectl apply -f tarinit-finalproj-worker-deployment.yml
deployment.apps/tarinit-test-worker-deployment-finalproj created

Check the service IP addresses for future curl operations
$ kubectl get services
NAME                                   TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)          AGE
tarinit-test-flask-service-finalproj   ClusterIP   10.111.234.33    <none>        5000/TCP         63m
tarinit-test-redis-service-finalproj   ClusterIP   10.104.122.228   <none>        6379/TCP         72m

FLASK:
CRUD
$ kubectl exec -it redis-client-debug-deployment-5f88f47c96-mnzhj -- /bin/bash
# curl 10.111.234.33:5000/
Hello World!
# curl 10.111.234.33:5000/info/
# curl 10.111.234.33:5000/reset/
Database has been reset!
# curl 10.111.234.33:5000/patients/all/
# curl 10.111.234.33:5000/summary/
# curl -X POST -H "content-type: application/json" -d '{"id": "NEW_PATIENT", "Scan 1": "1", "Scan 2": "1", "Scan 3": "1", "Scan 4": "1", "Scan 5": "1", "Scan 6": "1", "Scan 7": "1", "Scan 8": "1", "Scan 9": "1", "Scan 10": "1"}' 10.111.234.33:5000/patients/add/
{
  "patients": [
	...
	...
	...
    {
      "id": "NEW_PATIENT",
      "Scan 1": "1",
      "Scan 2": "1",
      "Scan 3": "1",
      "Scan 4": "1",
      "Scan 5": "1",
      "Scan 6": "1",
      "Scan 7": "1",
      "Scan 8": "1",
      "Scan 9": "1",
      "Scan 10": "1"
    }
  ]
}
# curl '10.111.234.33:5000/subject/id/?id=002eb201-11ae-4794-ad88-06a2989a200a'
{
  "id": "002eb201-11ae-4794-ad88-06a2989a200a",
  "Scan 1": "1",
  "Scan 2": "0.915865385",
  "Scan 3": null,
  "Scan 4": null,
  "Scan 5": null,
  "Scan 6": null,
  "Scan 7": null,
  "Scan 8": null,
  "Scan 9": null,
  "Scan 10": null
}
# curl '10.111.234.33:5000/patients/edit/?id=002eb201-11ae-4794-ad88-06a2989a200a&Scan1=1.1&Scan2=1.1&Scan3=1.1&Scan4=1.1&Scan5=1.1&Scan6=1.1&Scan7=1.1&Scan8=1.1&Scan9=1.1&Scan10=1.1'
{
  "id": "002eb201-11ae-4794-ad88-06a2989a200a",
  "Scan 1": "1.1",
  "Scan 2": "1.1",
  "Scan 3": "1.1",
  "Scan 4": "1.1",
  "Scan 5": "1.1",
  "Scan 6": "1.1",
  "Scan 7": "1.1",
  "Scan 8": "1.1",
  "Scan 9": "1.1",
  "Scan 10": "1.1"
}
# curl '10.111.234.33:5000/patients/delete/?id=002eb201-11ae-4794-ad88-06a2989a200a'
Patient was deleted

JOBS
# curl '10.111.234.33:5000/scans/?start=Scan%201&end=Scan%2010'
{"id": "5afb2872-a428-43f5-bdbc-a374a5a8a38d", "status": "submitted", "start": "Scan 1", "end": "Scan 10"}
# curl 10.111.234.33:5000/jobs/all/
{
  "job.5afb2872-a428-43f5-bdbc-a374a5a8a38d": {
    "status": "complete",
    "id": "5afb2872-a428-43f5-bdbc-a374a5a8a38d"
  }
}
# curl '10.111.234.33:5000/jobs/id/?jobuuid=5afb2872-a428-43f5-bdbc-a374a5a8a38d'
{
  "image": "ready",
  "status": "complete",
  "end": "Scan 10",
  "x-y results": "passed",
  "id": "5afb2872-a428-43f5-bdbc-a374a5a8a38d",
  "start": "Scan 1"
}
# curl '10.111.234.33:5000/download/?jobuuid=5afb2872-a428-43f5-bdbc-a374a5a8a38d'
scp out.png tarinit@isp02.tacc.utexas.edu:/home/tarinit/
# curl 10.111.234.33:5000/jobs/delete/all/
All jobs were cleared.

REDIS TEST:
$ kubectl exec -it redis-client-debug-deployment-5f88f47c96-mnzhj -- /bin/bash
# ipython
In [1]: import redis, json
In [2]: rd_job = redis.StrictRedis(host='10.104.122.228', port=6379, db=0)
In [3]: rd_data = redis.StrictRedis(host='10.104.122.228', port=6379, db=2)
In [4]: rd_data.keys()
Out[4]: [b'patients_key']
In [5]: json.loads(rd_data.get('patients_key').decode('utf-8'))
{outputs entire data dictionary}
In [6]: rd_job.keys()
Out[6]:
[b'job.e5669825-0958-44e9-85f8-d80222ac48b2',
 b'job.5afb2872-a428-43f5-bdbc-a374a5a8a38d']

